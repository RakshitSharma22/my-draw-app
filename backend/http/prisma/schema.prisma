// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{

  id        Int     @id @default(autoincrement())
  fullName  String
  email     String   @unique
  password  String

  member    Member?

}

model Room {
  id       Int       @id  @default(autoincrement())
  name     String    
  description String
  color       String
  messages    Message[] // Messages in this room

  createdAt   DateTime @default(now())
}


model Member {
  id        String    @id @default(uuid())
  name      String
  status    String    @default("Offline") // Online, Away, Offline
  color     String
  messages  Message[] // Relation to messages sent by this member
  // Optional relation to User (authentication)
  userId    Int?      @unique
  user      User?     @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("members")
}



model Message {
  id        String   @id @default(uuid())
  content   String
  timestamp DateTime @default(now())
  
  // Relation to the sender
  senderId  String
  sender    Member   @relation(fields: [senderId], references: [id])
  
  // Optional - if you have rooms/channels
  roomId    Int?
  room      Room?    @relation(fields: [roomId], references: [id])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("messages")
}


